{"version":3,"sources":["components/Home.jsx"],"names":["Home","useState","movies","setMovies","url","useMemo","baseUrl","apiKey","title","media","useEffect","fetchMovies","allUrl","a","data","map","i","fetch","req","json","res","Promise","all","moviesData","mappedMovies","movie","results","moviesListWithTitle","length","push","fetchedMoviesList","limit","str","replace","mediaProp","mediaTitleProp","toLowerCase","fetchedMovies","isHome","Math","random"],"mappings":"6LAgFeA,UA3EF,WACX,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAMC,mBACV,iBAAM,CACJ,CACED,IAAI,GAAD,OAAKE,IAAL,kCAAsCC,KACzCC,MAAO,UACPC,MAAO,SAET,CACEL,IAAI,GAAD,OAAKE,IAAL,oCAAwCC,IAAxC,WACHC,MAAO,YACPC,MAAO,SAET,CACEL,IAAI,GAAD,OAAKE,IAAL,+BAAmCC,IAAnC,WACHC,MAAO,UACPC,MAAO,MAET,CACEL,IAAI,GAAD,OAAKE,IAAL,iCAAqCC,IAArC,WACHC,MAAO,YACPC,MAAO,SAGX,IA+BF,OAzBAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EAAOF,EAAOG,IAAP,+BAAAF,EAAA,MAAW,WAAOG,GAAP,iBAAAH,EAAA,sEACJI,MAAMD,EAAEZ,KADJ,cAChBc,EADgB,gBAEJA,EAAIC,OAFA,cAEhBC,EAFgB,yBAGfA,GAHe,2CAAX,uDADK,SAMOC,QAAQC,IAAIR,GANnB,OAYlB,IANMS,EANY,OAOZC,EAAeD,EAAWR,KAAI,SAACU,GAEnC,OADgCA,EAAxBC,WAGJC,EAAsB,GACnBX,EAAI,EAAGA,EAAIQ,EAAaI,OAAQZ,IACvCW,EAAoBE,KAAK,CACvB3B,OAAQsB,EAAaR,GACrBR,MAAOI,EAAOI,GAAGR,MACjBC,MAAOG,EAAOI,GAAGP,QAGrBN,EAAUwB,GAnBQ,2CAAH,sDAqBjBhB,EAAYP,KACX,CAACA,IAEIF,EAGN,mCACGA,EAAOa,KAAI,SAACe,GAAD,OACV,cAAC,UAAD,CAEEC,MAAO,EACPvB,OArCgBwB,EAqCMF,EAAkBtB,MApCvCwB,EAAIC,QAAQ,IAAK,MAqClBC,UAAWJ,EAAkBrB,MAC7B0B,eAAgBL,EAAkBtB,MAAM4B,cACxCC,cAAeP,EAAkB5B,OACjCoC,QAAQ,GANHC,KAAKC,UAnCK,IAACR,OA8BtB,cAAC,IAAD","file":"static/js/5.6b2f4994.chunk.js","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport Movies from \"./Movies/Movies\";\nimport { baseUrl, apiKey } from \"./../App\";\nimport LoadingSpinner from \"./UI/LoadingSpinner\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState();\n  const url = useMemo(\n    () => [\n      {\n        url: `${baseUrl}/movie/popular?api_key=${apiKey}`,\n        title: \"Popular\",\n        media: \"movie\",\n      },\n      {\n        url: `${baseUrl}/movie/top_rated?api_key=${apiKey}&page=1`,\n        title: \"Top_Rated\",\n        media: \"movie\",\n      },\n      {\n        url: `${baseUrl}/tv/popular?api_key=${apiKey}&page=1`,\n        title: \"Popular\",\n        media: \"tv\",\n      },\n      {\n        url: `${baseUrl}/tv/top_rated?api_key=${apiKey}&page=1`,\n        title: \"Top_Rated\",\n        media: \"tv\",\n      },\n    ],\n    []\n  );\n  const handleSetTitle = (str) => {\n    return str.replace(\"_\", \" \");\n  };\n\n  useEffect(() => {\n    const fetchMovies = async (allUrl) => {\n      const data = allUrl.map(async (i) => {\n        const req = await fetch(i.url);\n        const res = await req.json();\n        return res;\n      });\n      const moviesData = await Promise.all(data);\n      const mappedMovies = moviesData.map((movie) => {\n        const { results: moviesList } = movie;\n        return moviesList;\n      });\n      const moviesListWithTitle = [];\n      for (let i = 0; i < mappedMovies.length; i++) {\n        moviesListWithTitle.push({\n          movies: mappedMovies[i],\n          title: allUrl[i].title,\n          media: allUrl[i].media,\n        });\n      }\n      setMovies(moviesListWithTitle);\n    };\n    fetchMovies(url);\n  }, [url]);\n\n  return !movies ? (\n    <LoadingSpinner />\n  ) : (\n    <>\n      {movies.map((fetchedMoviesList) => (\n        <Movies\n          key={Math.random()}\n          limit={6}\n          title={handleSetTitle(fetchedMoviesList.title)}\n          mediaProp={fetchedMoviesList.media}\n          mediaTitleProp={fetchedMoviesList.title.toLowerCase()}\n          fetchedMovies={fetchedMoviesList.movies}\n          isHome={true}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}