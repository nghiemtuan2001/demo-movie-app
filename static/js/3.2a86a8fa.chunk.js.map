{"version":3,"sources":["components/Movies/DetailInfo.module.css","components/Movies/Genres.module.css","components/Movies/Genres.jsx","components/Movies/DetailInfo.jsx","components/Movies/MovieDetail.module.css","components/Movies/Cast.module.css","components/Movies/Casts.module.css","components/Movies/Cast.jsx","components/Movies/Casts.jsx","components/Movies/MovieDetail.jsx"],"names":["module","exports","Genres","genres","className","classes","map","genre","name","id","DetailInfo","title","overview","runtime","release_date","director","media","movieId","hasButton","to","Cast","character","imageUrl","cast","src","baseImageUrl","alt","Casts","casts","container","scrollbar","profile_path","MovieDetail","useParams","useState","data","setData","useEffect","fetchData","a","fetch","baseUrl","apiKey","req1","json","res1","req2","res2","movieData","crew","find","p","job","style","backgroundImage","baseImageUrlOriginal","backdrop_path","backdrop","poster_path","original_title","LoadingSpinner"],"mappings":"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","file":"static/js/3.2a86a8fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail-info\":\"DetailInfo_detail-info__2qnu5\",\"detail-title\":\"DetailInfo_detail-title__3R63X\",\"detail-typography\":\"DetailInfo_detail-typography__3gxHS\",\"detail-description\":\"DetailInfo_detail-description__2ZuH3\",\"button-watch\":\"DetailInfo_button-watch__24XsJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"genres\":\"Genres_genres__1IhVP\"};","import classes from \"./Genres.module.css\";\n\nconst Genres = ({ genres }) => {\n  return (\n    <div className={classes.genres}>\n      {genres.map((genre) => (\n        <span key={genre.id}>{genre.name}</span>\n      ))}\n    </div>\n  );\n};\n\nexport default Genres;\n","import classes from \"./DetailInfo.module.css\";\nimport Genres from \"./Genres\";\nimport { Link } from \"react-router-dom\";\n\nconst DetailInfo = ({\n  title,\n  overview,\n  runtime,\n  release_date,\n  director,\n  genres,\n  media,\n  movieId,\n  hasButton,\n}) => {\n  return (\n    <div className={classes[\"detail-info\"]}>\n      <div className={classes[\"detail-title\"]}>\n        <h1>{title}</h1>\n      </div>\n      <div\n        className={`${classes[\"detail-typography\"]} ${classes[\"detail-description\"]}`}\n      >\n        {overview}\n      </div>\n      <div className={classes[\"detail-typography\"]}>\n        {runtime && media !== \"tv\" && <span>Duration: {runtime}m</span>}\n        {release_date && release_date && (\n          <span>Release date: {release_date}</span>\n        )}\n        {director && <span>Director: {director}</span>}\n        <Genres genres={genres} />\n      </div>\n      {hasButton && (\n        <Link to={`/watch/${media}/${movieId}`}>\n          <button className={classes[\"button-watch\"]}>Watch now</button>\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default DetailInfo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetail_container__1TLFh\",\"detail-container\":\"MovieDetail_detail-container__1oesH\",\"backdrop\":\"MovieDetail_backdrop__1vgZ1\",\"detail-image\":\"MovieDetail_detail-image__3YRaU\",\"detail-info\":\"MovieDetail_detail-info__hVJPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast\":\"Cast_cast__3G0ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Casts_container__eBfdD\",\"casts\":\"Casts_casts__dfg60\",\"title\":\"Casts_title__1krTG\",\"scrollbar\":\"Casts_scrollbar__317dq\"};","import classes from \"./Cast.module.css\";\r\nimport { baseImageUrl } from \"../../App\";\r\n\r\nconst Cast = ({ name, character, imageUrl }) => {\r\n  return (\r\n    <div className={classes.cast}>\r\n      <img\r\n        // src=\"https://image.tmdb.org/t/p/w500/sOi4UZxflV07E7QXUaJTHROGlPU.jpg\"\r\n        src={`${baseImageUrl}${imageUrl}`}\r\n        alt={imageUrl}\r\n      />\r\n      <h3>{name}</h3>\r\n      <h4>{character}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import Cast from \"./Cast\";\nimport classes from \"./Casts.module.css\";\n\nconst Casts = ({ casts }) => {\n  return (\n    <div className={`${classes.container} ${`scrollbar`}`}>\n      <div className={classes.title}>\n        <h2>Cast:</h2>\n      </div>\n      <div className={`${classes.casts} ${classes.scrollbar}`}>\n        {casts.map((cast) => (\n          <Cast\n            key={cast.id}\n            name={cast.name}\n            character={cast.character}\n            imageUrl={cast.profile_path}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Casts;\n","import classes from \"./MovieDetail.module.css\";\nimport Casts from \"./Casts\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { baseUrl, baseImageUrl, baseImageUrlOriginal, apiKey } from \"../../App\";\nimport DetailInfo from \"./DetailInfo\";\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\n\nconst MovieDetail = () => {\n  const { movieId, media } = useParams();\n  const [data, setData] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const req1 = await fetch(\n        `${baseUrl}/${media}/${movieId}?api_key=${apiKey}`\n      );\n      const res1 = await req1.json();\n      const req2 = await fetch(\n        `${baseUrl}/${media}/${movieId}/credits?api_key=${apiKey}`\n      );\n      const res2 = await req2.json();\n      setData(() => {\n        const movieData = res1;\n        const director = res2.crew.find((p) => p.job === \"Director\");\n        const casts = res2.cast;\n        return { movieData, director, casts };\n      });\n    };\n\n    fetchData();\n  }, [movieId, media]);\n\n  return !data ? (\n    <LoadingSpinner />\n  ) : (\n    <>\n      <div className={classes[\"container\"]}>\n        <div\n          style={{\n            backgroundImage: `url(\"${baseImageUrlOriginal}${data.movieData.backdrop_path}\")`,\n          }}\n          className={classes.backdrop}\n        ></div>\n        <div className={classes[\"detail-container\"]}>\n          {data.movieData.poster_path && (\n            <img\n              src={`${baseImageUrl}${data.movieData.poster_path}`}\n              alt={data.movieData.original_title}\n              className={classes[\"detail-image\"]}\n            />\n          )}\n          <DetailInfo\n            title={data.movieData?.title}\n            overview={data.movieData?.overview}\n            runtime={data.movieData?.runtime}\n            release_date={data.movieData?.release_date}\n            director={data.director?.name}\n            genres={data.movieData?.genres}\n            media={media}\n            movieId={movieId}\n            hasButton={true}\n          />\n        </div>\n        <Casts casts={data.casts} />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetail;\n"],"sourceRoot":""}